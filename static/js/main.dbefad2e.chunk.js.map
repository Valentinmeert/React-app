{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","loading","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","localStorage","getItem","setItem","status","current","winner","moves","map","move","desc","jumpTo","console","log","new_value","parseInt","clear","window","location","reload","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbefad2e.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Loading from \"./loading\";\nimport \"./index.css\";\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n        },\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  render() {\n    if (\n      localStorage.getItem(\"X\") == null &&\n      localStorage.getItem(\"O\") == null\n    ) {\n      localStorage.setItem(\"X\", 0);\n      localStorage.setItem(\"O\", 0);\n    }\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move\n        ? \"Revenir au tour n°\" + move\n        : \"Revenir au début de la partie\";\n      return (\n        <li key={move}>\n          <button className=\"btn-grad\" onClick={() => this.jumpTo(move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = winner + \" a gagné\";\n      console.log(winner);\n      var new_value = parseInt(localStorage.getItem(winner)) + 1;\n      localStorage.setItem(winner, new_value);\n    } else {\n      status = \"Prochain joueur : \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n    function refreshPage() {\n    localStorage.clear();\n    window.location.reload();\n  }\n    return (\n      <div className=\"game\">\n        <div className=\"score\">\n          <table>\n            <caption>Score</caption>\n            <tr>\n              <td> X </td>\n              <td> O </td>\n            </tr>\n            <tr>\n              <td> {localStorage.getItem(\"X\")} </td>\n              <td> {localStorage.getItem(\"O\")} </td>\n            </tr>\n          </table>\n          <button className=\"btn-grad\" onClick={refreshPage}>\n            {\" \"}\n            Remettre les compteurs à zéro\n          </button>\n        </div>\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div className=\"status\">{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n      console.log(squares[a]);\n    }\n  }\n  return null;\n}\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}